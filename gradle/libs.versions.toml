[versions]
agp = "8.10.1"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activity = "1.10.1"
androidx-lifecycle = "2.9.0"
androidx-core-splashscreen = "1.0.1"
composeHotReload = "1.0.0-alpha10"
composeMultiplatform = "1.8.1"
kotlin = "2.1.21"
androidTools = "31.10.1"
ktlint = "12.3.0"
detekt = "1.23.8"
twitter-detekt-compose = "0.0.26"
moduleGraph = "2.8.0"
dependencyGuard = "0.5.0"
truth = "1.4.4"
compose-shadow = "2.0.4"
compose-navigation = "2.9.0-beta01"
kotlinx-serialization = "1.8.1"
composeIcons = "1.1.1"
compose-unstyled = "1.31.1"
firebase-kotlin-sdk = "2.1.0"
googleServices = "4.4.2"
firebase-bom = "33.15.0"
koin = "4.1.0"
koinAnnotations = "2.1.0"
ksp = "2.1.21-2.0.2"

packageName = "com.jefisu.trackizer"
application-version = "1.0.0"

[libraries]
# Kotlin Multiplatform (KMP)
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# AndroidX
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "androidx-core-splashscreen" }

# Compose Multiplatform (CMP)
compose-gradlePlugin = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "composeMultiplatform" }
compose-shadow = { module = "com.adamglin:compose-shadow", version.ref = "compose-shadow" }
compose-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
composeIcons-feather = { module = "br.com.devsrsouza.compose.icons:feather", version.ref = "composeIcons" }
compose-unstyled = { module = "com.composables:core", version.ref = "compose-unstyled" }

# Firebase
firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "firebase-kotlin-sdk" }
firebase-auth = { module = "dev.gitlive:firebase-auth", version.ref = "firebase-kotlin-sdk" }
firebase-bom-android = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-common-android = { module = "com.google.firebase:firebase-common-ktx" }
firebase-auth-android = { module = "com.google.firebase:firebase-auth-ktx" }

# Koin Dependency Injection
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-compose = { module = "io.insert-koin:koin-compose" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation" }
koin-annotations-bom = { module = "io.insert-koin:koin-annotations-bom", version.ref = "koinAnnotations" }
koin-annotations = { module = "io.insert-koin:koin-annotations" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinAnnotations"  }

# Testing
truth = { module = "com.google.truth:truth", version.ref = "truth" }

# Code Quality & Formatting
twitter-detekt-compose = { module = "com.twitter.compose.rules:detekt", version.ref = "twitter-detekt-compose" }
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
ktlint-gradlePlugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlint" }
detekt-gradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
ksp-gradlePlugin = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }

# Build Tools
android-gradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-tools-common = { module = "com.android.tools:common", version.ref = "androidTools" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-compose-gradlePlugin = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }
dependencyGuard-gradlePlugin = { module = "com.dropbox.dependency-guard:com.dropbox.dependency-guard.gradle.plugin", version.ref = "dependencyGuard" }

[plugins]
# Android
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
googleServices = { id = "com.google.gms.google-services", version.ref = "googleServices" }

# Kotlin Multiplatform (KMP)
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinxSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }


# Compose Multiplatform (CMP)
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

# Code Quality & Formatting
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
moduleGraph = { id = "com.jraska.module.graph.assertion", version.ref = "moduleGraph" }
dependencyGuard = { id = "com.dropbox.dependency-guard", version.ref = "dependencyGuard" }

# Custom Plugins
trackizer-cmp-application = { id = "trackizer.cmp.application", version = "unspecified" }
trackizer-cmp-feature = { id = "trackizer.cmp.feature", version = "unspecified" }
trackizer-kmp-library = { id = "trackizer.kmp.library", version = "unspecified" }
trackizer-cmp-library = { id = "trackizer.cmp.library", version = "unspecified" }
trackizer-kmp-koin = { id = "trackizer.kmp.koin", version = "unspecified" }
trackizer-kmp-firebase = { id = "trackizer.kmp.firebase", version = "unspecified" }
